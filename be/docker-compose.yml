version: "3.9"
services:
  backend:
    build: .
    env_file:
      - .env
    environment:
      REDIS_URL: redis://redis:6379/0
      DATABASE_URL: postgresql+asyncpg://postgres:1234@host.docker.internal:5432/postgres
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      redis:
        condition: service_healthy
      # db:
      #   condition: service_healthy

  celery:
    build: .
    env_file:
      - .env
    environment:
      REDIS_URL: redis://redis:6379/0
      DATABASE_URL: postgresql+asyncpg://postgres:1234@host.docker.internal:5432/postgres
    command: celery -A src.utils.celery_tasks.c_app worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - redis
      # - db

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 2s
      timeout: 2s
      retries: 10

  # db:
  #   image: postgres:16
  #   restart: always
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: 1234
  #     POSTGRES_DB: postgres
  #   ports:
  #     - "5432:5432"
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U postgres"]
  #     interval: 2s
  #     timeout: 2s
  #     retries: 10
  #   volumes:
  #     - pgdata:/var/lib/postgresql/data

  # migrate:
  #   build: .
  #   env_file:
  #     - .env
  #   environment:
  #     REDIS_URL: redis://redis:6379/0
  #     DATABASE_URL: postgresql+asyncpg://postgres:1234@db:5432/postgres
  #   command: alembic upgrade head
  #   depends_on:
  #     - db

volumes:
  pgdata:
